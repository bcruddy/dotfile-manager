#!/usr/bin/env bash

export ANDROID_HOME=$USERPATH/Library/Android/sdk/
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/
export PATH=$HOME/bin:$PATH
export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$JAVA_HOME

function aggify () {
    if ! jq -e '
            ( arrays|. ) ,
            ( objects|select(has("pipeline"))|.pipeline ),
            ( objects|select(has("requests"))|.requests|first|.pipeline),
            ( objects|select(has("request"))|.request|.pipeline)
        '; then
        >&2 echo "Bad aggregation pipeline"; return 1
    fi | aggify_pipeline "$@"
}

function aggify_pipeline () {
    if [ "$1" == "v1" ]; then
        jq '{name: "name", response: {mimeType: "application/json"}, request: {name: "name", requestId: "id", pipeline: .}]}'
    else
        jq '{name: "name", response: {location: "request", mimeType: "application/json"}, requests: [{name: "name", requestId: "id", pipeline: .}]}'
    fi
}

# usage: [skipjs=UNSET] [base=master] appengine_lookaside <env> <name> <modules>
function appengine_lookaside () {
    local env=$1;
    local name=$2;
    local modules=$3;

    if [ -z $env ]; then
        env="atlas";
    fi;

    if [ -z $name ]; then
        name=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/');
    fi;

    if [ -z $modules ]; then
        modules="default";
    fi;

    if [ -z $base ]; then
        base="master";
    fi;

    echo "";
    echo "Building and deploying lookaside version '$name' in pendo-$env from base '$base' with module(s) $modules";
    echo "";

    cd $WORKSPACE/goexternal;
    git checkout $base;
    git pull;
    git submodule update --init;

    cd $WORKSPACE/pendo-appengine;
    git submodule update --init;
    nvm use 8.15; # includes npm@5.10

    # only install npm deps if we're deploying default AND we do not explicitly skip it
    if [[ $modules == *default* && $skipjs != "true" ]]; then
        npm ci;
        npx gulp build-js-dev;
    else
        echo "Skipping npm ci and gulp build...";
    fi;

    find . -name '*.DS_Store' -type f -ls -delete;

    if [ $modules == "all" ]; then
        python deploy.py -A pendo-$env -V $name --all-modules --skip-build-js;
    else
        python deploy.py -A pendo-$env -V $name -M $modules --skip-build-js;
    fi;

    npm set engine-strict false; # disable strict version checking
}

# pendo color pallete
function colors () {
    echo gray-darker-2: \#0a0c15
    echo gray-darker-1: \#1a1c25
    echo gray-primary: \#2a2c35
    echo gray-lighter-1: \#3a3c45
    echo gray-lighter-2: \#6a6c75
    echo gray-lighter-3: \#9a9ca5
    echo gray-lighter-4: \#babcc5
    echo gray-lighter-5: \#dadce5
    echo gray-lighter-6: \#eaecf1
    echo gray-lighter-7: \#f4f4f7
    echo gray-lighter-8: \#f8f8f9

    echo pink-darker-3: \#79002b
    echo pink-darker-2: \#9c0038
    echo pink-darker-1: \#bd1746
    echo pink-primary: \#ec2059
    echo pink-lighter-1: \#ff3467
    echo pink-lighter-2: \#ffdde6
}

function color () {
    colors | grep $1;
}

alias pendo-start="npm run gulp serve & npm start"
alias ks="npm run karma:start"
alias bet="TZ=UTC go test --tags=appenginevm pendo.io/"
alias via="node $HOME/code/workspace/via-ui/lib/cli"
alias sendit=appengine_lookaside;
