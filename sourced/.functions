RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

reload_shell () {
    echo "Reloading shell...";

	source ~/.bash_profile;

	echo "";
	echo "Shell has been reloaded";
	echo "";
}

pr_mlp_landing () {
    cd $MARKETPLACE/mp-landing-content

    git sync

    cp -R preview/landing-page/* production/landing-page

    git checkout -b deploy-landing
    git add .
    git commit -m "deploy landing page $1"
    git push origin deploy-landing
}

pr_mlp_about () {
    cd $MARKETPLACE/mp-landing-content

    git sync

    cp -R preview/about-page/* production/about-page

    git checkout -b deploy-about
    git add .
    git commit -m "deploy about page $1"
    git push origin deploy-about
}

# sync all git repositories in the $MARKETPLACE directory (exported from .extra)
# git sync is a git alias:
#	 !git checkout master && git pull --ff-only upstream master && git push origin master
sync_mp () {
	echo "";

	INIT_DIR=$PWD;

	for dir in $MARKETPLACE/*; do
		cd $dir;

		if [ -d ".git" ]; then
            echo "";
            printf "${BLUE}Syncing $dir${NC}\n";
			git sync
			echo "";
		fi
	done
	unset dir

	cd $INIT_DIR;
}

# print directory contents permissions as an octal
perms () {
    stat -f '%A %N' *
}

# run individual nautilus test. Must be run from nautilus project root for autocomplete
nautilus_test () {
	TEST_FILE_PATH=$1;

	./node_modules/.bin/mocha --timeout 5000 --compilers js:babel/register --recursive --require ./ ./$TEST_FILE_PATH
}

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

curl_postf() {
	curl -i -X POST -H "Conent-Type: multipart/form-data" -F "data=@$1" $2 #[abs file path, url]
}
personal_github() {
  git config --global user.email $PERSONAL_EMAIL
  echo "setting git global user email to $(git config --global user.email)"

}

work_github() {
  git config --global user.email $WORK_EMAIL
  echo "setting git global user email to $(git config --global user.email)"

}

work_github
