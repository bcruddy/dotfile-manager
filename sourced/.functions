RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

reload_shell () {
    echo "Reloading shell...";
	source ~/.bash_profile;
	echo "Shell has been reloaded";
}

# sync all git repositories in the $WORKSPACE directory (exported from .extra)
# git sync is a git alias:
#	 !git checkout master && git pull --ff-only upstream master && git push origin master
workspace_sync () {
	echo "";

	local INIT_DIR=$PWD;

	for dir in $WORKSPACE/*; do
		cd $dir;

		if [ -d ".git" ]; then
            echo "";
            printf "${BLUE}Syncing $dir${NC}\n";
			git sync
			echo "";
		fi
	done
	unset dir

	cd $INIT_DIR;
}

wifi_password () {
     ~/Code/dotfile-manager/bin/wifi-password
}

nuke_dsstore () {
    find . -name '*.DS_Store' -type f -ls -delete
}

# print directory contents permissions as an octal
perms () {
    stat -f '%A %N' *
}

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

curl_postf() {
	curl -i -X POST -H "Conent-Type: multipart/form-data" -F "data=@$1" $2 #[abs file path, url]
}

eth () {
    curl https://api.gemini.com/v1/pubticker/ethusd && echo "";
}

btc () {
    curl https://api.gemini.com/v1/pubticker/btcusd && echo "";
}

personal_github () {
  git config user.email $PERSONAL_EMAIL
  echo "setting git repo user email to $(git config user.email)"
}

pendo_github () {
    git config user.email $PENDO_EMAIL
    echo "setting git repo user email to $(git config user.email)"
}

deploy_bcr () {
    ssh_bcr "cd $RUDDYIO_DIR && ./deploy_web.sh"
}

deploy_lookaside () {
    ./deploy.py -A pendo-"$1" -V $2 modules/appengine/app-test.yaml
}
