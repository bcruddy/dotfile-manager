#!/usr/bin/env bash

RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

function reload_shell () {
    echo "Reloading shell...";
	source ~/.bash_profile;
	echo "Shell has been reloaded";
}

function npm_install () {
    echo "running: nvm use && rm -rf node_modules && npm cache clean --force && npm install";

    nvm use;
    rm -rf node_modules;
    npm cache clean --force;
    npm install;
    npx jest --clearCache;
}

function yarn_install () {
    echo "running: rm -rf node_modules && yarn cache clean && yarn";
    rm -rf node_modules && yarn cache clean && yarn;
}

function wifi_password () {
     ~/code/dotfile-manager/bin/wifi-password;
}

function nuke_dsstore () {
    find . -name '*.DS_Store' -type f -ls -delete;
}

# print directory contents permissions as an octal
function perms () {
    stat -f '%A %N' *
}

function parse_git_branch () {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/';
}

function curl_postf () {
	curl -i -X POST -H "Conent-Type: multipart/form-data" -F "data=@$1" $2; #[abs file path, url]
}

# Create a new directory and enter it
function md () {
  mkdir -p "$@" && cd "$@"
}

# clean the current directory
function clean () {
    read -p "remove everything here? (y/N)" yn
    if [ $yn = "y" ]; then
        rm -rf ./* ./.*
    fi
}

# check file size
function fs () {
    du -sh ${1} | awk '{print $1}'
}

# check processes using a port
function port () {
    lsof -iTCP:$1 -sTCP:LISTEN
}

function ccd () {
    cd $1;

    if [ -f "./.nvmrc" ]; then
        nvm use;
    fi;
}

function npm_globals () {
    npm install -g @vue/cli yarn ndb
}
